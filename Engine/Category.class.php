<?php/** * Created by PhpStorm. * User: Игорь * Date: 15.06.2015 * Time: 13:01 */class Category extends Module {    public $module = "Category";    public $title;    public $description;    public $keywords;    public $category;    public $categories;    public $product;    public $sale;    public $price;    public $brands;    function __construct($str){		parent::__construct();        if(App::POST('sortPrice')) {            $this -> go_SortPrice(App::POST('pricemin'), App::POST('pricemax'));        }        if(App::POST('sortBrand')) {            $this -> go_SortBrand(App::POST('brand'));        }        if(App::POST('order_price')) {            $this -> categories = $this -> get_category($str, App::POST('order_price'));        }        if(App::POST('order_price_desc')) {            $this -> categories = $this -> get_category($str, App::POST('order_price_desc'));        }        if(App::POST('button')) {            $this -> go_toPay(App::POST('button'));        }        $this -> title = $str;		$this -> category = $str;		$this -> categories = $this -> get_category($str);	}    /**     * @param $cat     * @return array     */    private function get_category($cat, $sort = FALSE) {		$result = App::$db -> query("				SELECT * FROM categories WHERE title = '$cat'			");        if($result -> columnCount() != 0) {            $result -> setFetchMode(PDO::FETCH_ASSOC);            while ($category = $result->fetch()) {                $arr[] = $category;            }            foreach ($arr AS $cat) {                if ($cat['parent_id'] == 0) {                    $category_arr = $this -> add_category($cat['id']);                    $this -> sale = $this -> get_sale();                    parent::template('p_category');                } else {                    $category_arr = $this -> add_category($cat['parent_id'] <= 3 ? $cat['id'] : $cat['parent_id']);                    $this -> product = $this -> get_product($cat['id'], $sort);                    $this -> price = $this -> get_categoryPriceSort($cat['id']);                    $this -> brands = $this -> get_categoryBrandSort();                    $this-> sale = $this -> get_sale();                    $this-> category_id = $cat['id'];                    parent::template('ch_category');                }            }        }		return $category_arr;	}    /**     * @param $id     * @return array     */    private function add_category($id) {        $result = App::$db -> query("				SELECT * FROM categories WHERE parent_id = '".$id."'			");        $result -> setFetchMode(PDO::FETCH_ASSOC);        while($category = $result->fetch()) {            $categories[] = $category;        }        foreach($categories AS $cat){            $res = App::$db -> query("		      		SELECT * FROM categories WHERE parent_id = '".$cat['id']."'		      	");            $res -> setFetchMode(PDO::FETCH_ASSOC);            for($i = 0; $i < $res -> rowCount();$i++){                $row = $res->fetch();                $categories[$row['parent_id']][] = $row;            }        }        return $categories;	}    private function get_product ($id, $sort = FALSE){            $query = "                                SELECT product.*                                FROM product                                LEFT JOIN categories ON product.id_category = categories.id                                WHERE categories.parent_id = '" . $id . "' OR categories.id = '" . $id . "'                            ";            if(isset($_POST['order_price'])) {                $query .= " ORDER BY price_g";            }            if(isset($_POST['order_price_desc'])) {                $query .= " ORDER BY price_g DESC";            }            $result = App::$db -> query($query);            if($result -> columnCount() != 0) {                $result -> setFetchMode(PDO::FETCH_ASSOC);                for ($i = 0; $i < $result -> rowCount(); $i++) {                    $row = $result -> fetch();                    $categories[] = $row;                }            }        return $categories;    }    /**     * @return array     */    private function get_sale(){        $result = App::$db -> query("                            SELECT * FROM product WHERE sale = 1");        if($result -> columnCount() != 0) {            $result -> setFetchMode(PDO::FETCH_ASSOC);            while ($category = $result->fetch()) {                $sale[] = $category;            }        }        return $sale;    }    private function get_categoryPriceSort($id){            $result = App::$db -> query("                                    SELECT MAX(product.`price_g`) AS pricemax, MIN(product.price_g) AS pricemin                                    FROM product                                    LEFT JOIN categories ON product.id_category = categories.id                                    WHERE categories.parent_id = '" . $id . "' OR categories.id = '" . $id . "'                                    ");            if($result -> columnCount() != 0) {                $result -> setFetchMode(PDO::FETCH_ASSOC);                while ($arr = $result -> fetch()) {                    $sort[] = $arr;                }            }        return $sort;    }    private function get_categoryBrandSort(){        $result = App::$db -> query("                                SELECT id, title                                FROM brands                                ");        if($result -> columnCount() != 0) {            $result -> setFetchMode(PDO::FETCH_ASSOC);            while ($arr = $result->fetch()) {                $brands[] = $arr;            }        }        return $brands;    }    public function get_status($status){        switch ($status){            case 'Есть в наличии':                $a = '<div class="product_status_4">' .$status. '</div>'; break;            case 'Нет в наличии':                $a = '<div class="product_status_3">' .$status. '</div>'; break;            case 'Наличие уточняйте':                $a = '<div class="product_status_1">' .$status. '</div>'; break;        }        return $a;    }    public function get_statusProduct($id){    }    private function go_SortPrice($min, $max){        $result = App::$db -> query("				SELECT * FROM categories WHERE title = '" .$this -> category. "'			");        if($result -> columnCount() != 0) {            $result -> setFetchMode(PDO::FETCH_ASSOC);            while ($category = $result->fetch()) {                $arr[] = $category;            }            foreach ($arr AS $cat) {                if($cat['parent_id '] <= 3) {                    $result = App::$db->query("                                            SELECT product.*                                            FROM product                                            INNER JOIN categories                                            ON product.id_category = categories.id                                            WHERE categories.parent_id = '" . $cat['id'] . "'                                            and product.price_g < '" . $max . "'                                            and product.price_g > '" . $min . "'                                            ");                    if($result -> columnCount() != 0) {                        $result->setFetchMode(PDO::FETCH_ASSOC);                        while ($arr = $result->fetch()) {                            $sort[] = $arr;                        }                    }                    $this -> product = $sort;                }else{                    $result = App::$db->query("                                            SELECT product.*                                            FROM product                                            INNER JOIN categories                                            ON product.id_category = categories.id                                            WHERE categories.id = '" . $cat['id'] . "'                                            and product.price_g < '" . $max . "'                                            and product.price_g > '" . $min . "'                                            ");                    if($result -> columnCount() != 0) {                        $result->setFetchMode(PDO::FETCH_ASSOC);                        while ($arr = $result->fetch()) {                            $sort[] = $arr;                        }                    }                    $this -> product = $sort;                }            }        }    }    private function go_SortBrand($brand){    }    /**     * @param $id     */    private function go_toPay ($id){        parent::setCookie($id);    }    /**     * @param $arr     */    public function view_category($arr) {        for($i = 0; $i < count($arr[$i]);$i++) {            echo '	      				<li>				      		<div class="photo">			                        <img src="/images/menu/'.$arr[$i]['img'].'"/>			                    </div>                                        <ul>                <li><a class="title" href="?module=Category/' .$arr[$i]['title'].'">'.$arr[$i]['title'].'</a></li>	      		';            $this -> view_dcategory($arr,$arr[$i]['id']);            echo '	      								</ul>	      				</li>	      		';        }    }    public function view_dcategory($arr,$parent_id = 0) {        for($i = 0; $i < count($arr[$parent_id]);$i++) {            echo '                <li><a href="?module=Category/' .$arr[$parent_id][$i]['title'].'">'.$arr[$parent_id][$i]['title'].'</a></li>            ';        }    }    public function view_padding_category($arr) {        for($i = 0; $i < count($arr);$i++) {            echo '                                <a class="t-d_n d_i-b" href="?module=Category/' .$arr[$i]['title'].'"><span>'.$arr[$i]['title'].'</span></a>';        }    }    public function view_sale($arr){        for($i = 0; $i < count($arr);$i++) {            echo '                    <li>                        <div class="description f_r">                            <div class="d_t-c">                                <a href="?module=Product/' .$arr[$i]['id']. '">' .$arr[$i]['title']. '</a>                                <div class="price-f-s_14"><span class="grn">' .$arr[$i]['price_g']. ' грн</span><span class="dol">' .$arr[$i]['price_d']. ' $</span></div>                            </div>                        </div>                        <a href="?module=Product/' .$arr[$i]['id']. '" class="photo_block">                            <figure>                                                                    <img src="/images/product/' .$arr[$i]['img']. '_small.jpg">                            </figure>                        </a>                    </li>            ';        }    }    public function view_product($arr) {        for($i = 0; $i < count($arr);$i++) {            echo '            <li>                <div class="description f_r">                    <a href="?module=Product/' .$arr[$i]['id']. '">' .$arr[$i]['title']. '</a>                    <div class="f_l">                        <div class="price-f-s_24 clearfix">                            <span class="grn">' .$arr[$i]['price_g']. ' грн.</span><br>                        </div>                            ' .$this -> get_status($arr[$i]['status']). '                        <button class="but_buy_m f_l goBuy" type="submit" name="button" value="' .$arr[$i]['id']. '"><span>В корзину</span></button>                    </div>                </div>                <a href="?module=Product/' .$arr[$i]['id']. '" class="photo_block f_l">                    <figure>                        <img src="/images/product/' .$arr[$i]['img']. '_small.jpg" alt="' .$arr[$i]['title']. '">                    </figure>                </a>            </li>            ';        }    }    public function view_categoryBrandSort($arr){        for($i = 0; $i < count($arr[$i]);$i++) {          echo '            <span class="frame_label" id="brand_7">                        <span>                            <span class="niceCheck" style="background-position: -196px -21px;"><input name="brand[]" value="' .$arr[$i]['id']. '" type="checkbox"></span>                            <span class="name">' .$arr[$i]['title']. '</span>                        </span>                    </span>          ';        }    }}?>